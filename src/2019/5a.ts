import { IntCodeMachine } from "./modules/IntCodeMachine";
import { Rig } from "./modules/rig";

const rig = new Rig(5
    ,
    async (d, o) => {
        const arr = d.split(",")
            .map(Number);
        if (o.type === "run") {
            arr.push(5);
        }
        const input = arr.pop();
        const machine = new IntCodeMachine(arr);
        machine.input(input);
        machine.Run();
        return machine.output;
    }
);
(async () => {
    await rig.test("3,9,8,9,10,9,4,9,99,-1,8,8", [1]);
    await rig.test("3,9,8,9,10,9,4,9,99,-1,8,7", [0]);
    await rig.test("3,9,7,9,10,9,4,9,99,-1,8,8", [0]);
    await rig.test("3,9,7,9,10,9,4,9,99,-1,8,7", [1]);
    await rig.test("3,3,1108,-1,8,3,4,3,99,8", [1]);
    await rig.test("3,3,1108,-1,8,3,4,3,99,7", [0]);
    await rig.test("3,3,1107,-1,8,3,4,3,99,8", [0]);
    await rig.test("3,3,1107,-1,8,3,4,3,99,7", [1]);

    await rig.test("3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99,7", [999]);
    await rig.test("3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99,8", [1000]);
    await rig.test("3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99,9", [1001]);
    await rig.test("3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99,-10010101010", [999]);
    await rig.runPrint();

})()
.then(() => {console.log("Done"); });
